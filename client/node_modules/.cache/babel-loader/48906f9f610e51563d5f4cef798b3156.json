{"ast":null,"code":"var _jsxFileName = \"/Users/jcinco/CODING/Github Desktop/expense-tracker/client/src/context/AuthContext.js\";\nimport React, { createContext, useState, useEffect } from 'react';\nimport app from '../utils/firebase'; // Create context\n\nexport const AuthContext = createContext(); // Provider component\n\nexport const AuthProvider = ({\n  children\n}) => {\n  const [currentUser, serCurrentUser] = useState(null);\n  const [pending, setPending] = useState(true);\n  useEffect(() => {\n    app.auth().onAuthStateChanged(user => {\n      serCurrentUser(user);\n      setPending(false);\n    });\n  }, []);\n\n  if (pending) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, \"Loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      currentUser\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/jcinco/CODING/Github Desktop/expense-tracker/client/src/context/AuthContext.js"],"names":["React","createContext","useState","useEffect","app","AuthContext","AuthProvider","children","currentUser","serCurrentUser","pending","setPending","auth","onAuthStateChanged","user"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AAEA,OAAOC,GAAP,MAAgB,mBAAhB,C,CAEA;;AACA,OAAO,MAAMC,WAAW,GAAGJ,aAAa,EAAjC,C,CAEP;;AACA,OAAO,MAAMK,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC1C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,GAAG,CAACQ,IAAJ,GAAWC,kBAAX,CAA+BC,IAAD,IAAU;AACpCL,MAAAA,cAAc,CAACK,IAAD,CAAd;AACAH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAHD;AAIH,GALQ,EAKN,EALM,CAAT;;AAOA,MAAID,OAAJ,EAAa;AACT,wBAAO,uDAAP;AACH;;AAED,sBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AACzBF,MAAAA;AADyB,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGMD,QAHN,CADJ;AAOH,CAtBM","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nimport app from '../utils/firebase'\n\n// Create context\nexport const AuthContext = createContext();\n\n// Provider component\nexport const AuthProvider = ({ children }) => {\n    const [currentUser, serCurrentUser] = useState(null);\n    const [pending, setPending] = useState(true);\n\n    useEffect(() => {\n        app.auth().onAuthStateChanged((user) => {\n            serCurrentUser(user);\n            setPending(false);\n        });\n    }, []);\n\n    if (pending) {\n        return <>Loading...</>\n    }\n\n    return (\n        <AuthContext.Provider value={{\n            currentUser\n        }}>\n            { children }\n        </AuthContext.Provider>\n    );\n}"]},"metadata":{},"sourceType":"module"}