{"ast":null,"code":"var _jsxFileName = \"/Users/jcinco/CODING/Github Desktop/expense-tracker/client/src/context/GlobalState.js\";\nimport React, { createContext, useReducer, useEffect, useState } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios'; // Authentication\n\nimport app from '../utils/firebase'; // Initial state\n\nconst initialState = {\n  transactions: [],\n  error: null,\n  loading: true,\n  currentUser: null\n}; // Create context\n\nexport const GlobalContext = createContext(initialState); // Provider component\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n  const [currentUser, setCurrentUser] = useState(null); // Actions\n\n  async function getTransactions() {\n    try {\n      const res = await axios.get('/api/v1/transactions');\n      dispatch({\n        type: 'GET_TRANSACTIONS',\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: error.response.data.error\n      });\n    }\n  }\n\n  async function deleteTransaction(id) {\n    try {\n      await axios.delete(`/api/v1/transactions/${id}`);\n      dispatch({\n        type: 'DELETE_TRANSACTION',\n        payload: id\n      });\n    } catch (error) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: error.response.data.error\n      });\n    }\n  }\n\n  async function addTransaction(transaction) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/v1/transactions', transaction, config);\n      dispatch({\n        type: 'ADD_TRANSACTION',\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: error.response.data.error\n      });\n    }\n  }\n\n  useEffect(() => {\n    app.auth().onAuthStateChanged(setCurrentUser);\n  }, []);\n\n  if (pending) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, \"Loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      error: state.error,\n      loading: state.loading,\n      getTransactions,\n      deleteTransaction,\n      addTransaction,\n      currentUser\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/jcinco/CODING/Github Desktop/expense-tracker/client/src/context/GlobalState.js"],"names":["React","createContext","useReducer","useEffect","useState","AppReducer","axios","app","initialState","transactions","error","loading","currentUser","GlobalContext","GlobalProvider","children","state","dispatch","setCurrentUser","getTransactions","res","get","type","payload","data","response","deleteTransaction","id","delete","addTransaction","transaction","config","headers","post","auth","onAuthStateChanged","pending"],"mappings":"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","sourcesContent":["import React, { createContext, useReducer, useEffect, useState } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\n\n// Authentication\nimport app from '../utils/firebase';\n\n// Initial state\nconst initialState = {\n    transactions: [],\n    error: null,\n    loading: true,\n    currentUser: null\n}\n\n// Create context\nexport const GlobalContext = createContext(initialState);\n\n// Provider component\nexport const GlobalProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n    const [currentUser, setCurrentUser] = useState(null);\n\n    // Actions\n    async function getTransactions() {\n        try {\n            const res = await axios.get('/api/v1/transactions');\n\n            dispatch({\n                type: 'GET_TRANSACTIONS',\n                payload: res.data.data\n            });\n        } catch (error) {\n            dispatch({\n                type: 'TRANSACTION_ERROR',\n                payload: error.response.data.error\n            });\n        }\n    }\n\n\n    async function deleteTransaction(id) {\n        try {\n            await axios.delete(`/api/v1/transactions/${id}`);\n\n            dispatch({\n                type: 'DELETE_TRANSACTION',\n                payload: id\n            });\n        } catch (error) {\n            dispatch({\n                type: 'TRANSACTION_ERROR',\n                payload: error.response.data.error\n            });\n        }\n       \n    }\n\n    async function addTransaction(transaction) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        try {\n            const res = await axios.post('/api/v1/transactions', transaction, config)\n\n            dispatch({\n                type: 'ADD_TRANSACTION',\n                payload: res.data.data\n            });\n        } catch (error) {\n            dispatch({\n                type: 'TRANSACTION_ERROR',\n                payload: error.response.data.error\n            });\n        }\n    }\n\n    useEffect(() => {\n        app.auth().onAuthStateChanged(setCurrentUser);\n    }, []);\n\n    if(pending){\n        return <>Loading...</>\n      }\n    return (<GlobalContext.Provider value={{\n        transactions: state.transactions,\n        error: state.error,\n        loading: state.loading,\n        getTransactions,\n        deleteTransaction,\n        addTransaction,\n        currentUser\n    }}>\n        {children}\n    </GlobalContext.Provider>);\n}"]},"metadata":{},"sourceType":"module"}