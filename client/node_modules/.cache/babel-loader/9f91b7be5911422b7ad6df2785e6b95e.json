{"ast":null,"code":"var _jsxFileName = \"/Users/jcinco/CODING/Github Desktop/expense-tracker/client/src/context/GlobalState.js\";\nimport React, { createContext, useReducer, useEffect, useState } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios'; // Authentication\n\nimport app from '../utils/firebase'; // Initial state\n\nconst initialState = {\n  transactions: [],\n  error: null,\n  loading: true\n}; // Create context\n\nexport const GlobalContext = createContext(initialState); // Provider component\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n  const [currentUser, setCurrentUser] = useState(initialState.currentUser);\n  const [pending, setPending] = useState(true); // Actions\n\n  async function getTransactions() {\n    try {\n      const res = await axios.get('/api/v1/transactions');\n      dispatch({\n        type: 'GET_TRANSACTIONS',\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: error.response.data.error\n      });\n    }\n  }\n\n  async function deleteTransaction(id) {\n    try {\n      await axios.delete(`/api/v1/transactions/${id}`);\n      dispatch({\n        type: 'DELETE_TRANSACTION',\n        payload: id\n      });\n    } catch (error) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: error.response.data.error\n      });\n    }\n  }\n\n  async function addTransaction(transaction) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/v1/transactions', transaction, config);\n      dispatch({\n        type: 'ADD_TRANSACTION',\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: error.response.data.error\n      });\n    }\n  }\n\n  useEffect(() => {\n    app.auth().onAuthStateChanged(user => {\n      setCurrentUser(user);\n      setPending(false);\n    });\n  }, []);\n\n  if (pending) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, \"Loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      currentUser,\n      transactions: state.transactions,\n      error: state.error,\n      loading: state.loading,\n      getTransactions,\n      deleteTransaction,\n      addTransaction\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/jcinco/CODING/Github Desktop/expense-tracker/client/src/context/GlobalState.js"],"names":["React","createContext","useReducer","useEffect","useState","AppReducer","axios","app","initialState","transactions","error","loading","GlobalContext","GlobalProvider","children","state","dispatch","currentUser","setCurrentUser","pending","setPending","getTransactions","res","get","type","payload","data","response","deleteTransaction","id","delete","addTransaction","transaction","config","headers","post","auth","onAuthStateChanged","user"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,EAAsDC,QAAtD,QAAsE,OAAtE;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,GAAP,MAAgB,mBAAhB,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE,EADG;AAEjBC,EAAAA,KAAK,EAAE,IAFU;AAGjBC,EAAAA,OAAO,EAAE;AAHQ,CAArB,C,CAMA;;AACA,OAAO,MAAMC,aAAa,GAAGX,aAAa,CAACO,YAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMK,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC5C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,UAAU,CAACG,UAAD,EAAaG,YAAb,CAApC;AAEA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAACI,YAAY,CAACS,WAAd,CAA9C;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,IAAD,CAAtC,CAJ4C,CAM5C;;AACA,iBAAeiB,eAAf,GAAiC;AAC7B,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAU,sBAAV,CAAlB;AAEAP,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,IAAI,EAAE,kBADD;AAELC,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASA;AAFb,OAAD,CAAR;AAIH,KAPD,CAOE,OAAOhB,KAAP,EAAc;AACZM,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,IAAI,EAAE,mBADD;AAELC,QAAAA,OAAO,EAAEf,KAAK,CAACiB,QAAN,CAAeD,IAAf,CAAoBhB;AAFxB,OAAD,CAAR;AAIH;AACJ;;AAGD,iBAAekB,iBAAf,CAAiCC,EAAjC,EAAqC;AACjC,QAAI;AACA,YAAMvB,KAAK,CAACwB,MAAN,CAAc,wBAAuBD,EAAG,EAAxC,CAAN;AAEAb,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,IAAI,EAAE,oBADD;AAELC,QAAAA,OAAO,EAAEI;AAFJ,OAAD,CAAR;AAIH,KAPD,CAOE,OAAOnB,KAAP,EAAc;AACZM,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,IAAI,EAAE,mBADD;AAELC,QAAAA,OAAO,EAAEf,KAAK,CAACiB,QAAN,CAAeD,IAAf,CAAoBhB;AAFxB,OAAD,CAAR;AAIH;AAEJ;;AAED,iBAAeqB,cAAf,CAA8BC,WAA9B,EAA2C;AACvC,UAAMC,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;;AAMA,QAAI;AACA,YAAMZ,GAAG,GAAG,MAAMhB,KAAK,CAAC6B,IAAN,CAAW,sBAAX,EAAmCH,WAAnC,EAAgDC,MAAhD,CAAlB;AAEAjB,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,IAAI,EAAE,iBADD;AAELC,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASA;AAFb,OAAD,CAAR;AAIH,KAPD,CAOE,OAAOhB,KAAP,EAAc;AACZM,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,IAAI,EAAE,mBADD;AAELC,QAAAA,OAAO,EAAEf,KAAK,CAACiB,QAAN,CAAeD,IAAf,CAAoBhB;AAFxB,OAAD,CAAR;AAIH;AACJ;;AAEDP,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,GAAG,CAAC6B,IAAJ,GAAWC,kBAAX,CAA+BC,IAAD,IAAU;AACpCpB,MAAAA,cAAc,CAACoB,IAAD,CAAd;AACAlB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAHD;AAIH,GALQ,EAKN,EALM,CAAT;;AAOA,MAAGD,OAAH,EAAW;AACP,wBAAO,uDAAP;AACH;;AACD,sBAAQ,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AACnCF,MAAAA,WADmC;AAEnCR,MAAAA,YAAY,EAAEM,KAAK,CAACN,YAFe;AAGnCC,MAAAA,KAAK,EAAEK,KAAK,CAACL,KAHsB;AAInCC,MAAAA,OAAO,EAAEI,KAAK,CAACJ,OAJoB;AAKnCU,MAAAA,eALmC;AAMnCO,MAAAA,iBANmC;AAOnCG,MAAAA;AAPmC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASHjB,QATG,CAAR;AAWH,CApFM","sourcesContent":["import React, { createContext, useReducer, useEffect, useState } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\n\n// Authentication\nimport app from '../utils/firebase';\n\n// Initial state\nconst initialState = {\n    transactions: [],\n    error: null,\n    loading: true,\n}\n\n// Create context\nexport const GlobalContext = createContext(initialState);\n\n// Provider component\nexport const GlobalProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n    const [currentUser, setCurrentUser] = useState(initialState.currentUser);\n    const [pending, setPending] = useState(true);\n\n    // Actions\n    async function getTransactions() {\n        try {\n            const res = await axios.get('/api/v1/transactions');\n\n            dispatch({\n                type: 'GET_TRANSACTIONS',\n                payload: res.data.data\n            });\n        } catch (error) {\n            dispatch({\n                type: 'TRANSACTION_ERROR',\n                payload: error.response.data.error\n            });\n        }\n    }\n\n\n    async function deleteTransaction(id) {\n        try {\n            await axios.delete(`/api/v1/transactions/${id}`);\n\n            dispatch({\n                type: 'DELETE_TRANSACTION',\n                payload: id\n            });\n        } catch (error) {\n            dispatch({\n                type: 'TRANSACTION_ERROR',\n                payload: error.response.data.error\n            });\n        }\n       \n    }\n\n    async function addTransaction(transaction) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        try {\n            const res = await axios.post('/api/v1/transactions', transaction, config)\n\n            dispatch({\n                type: 'ADD_TRANSACTION',\n                payload: res.data.data\n            });\n        } catch (error) {\n            dispatch({\n                type: 'TRANSACTION_ERROR',\n                payload: error.response.data.error\n            });\n        }\n    }\n\n    useEffect(() => {\n        app.auth().onAuthStateChanged((user) => {\n            setCurrentUser(user);\n            setPending(false);\n        });\n    }, []);\n\n    if(pending){\n        return <>Loading...</>\n    }\n    return (<GlobalContext.Provider value={{\n        currentUser,\n        transactions: state.transactions,\n        error: state.error,\n        loading: state.loading,\n        getTransactions,\n        deleteTransaction,\n        addTransaction,\n    }}>\n        {children}\n    </GlobalContext.Provider>);\n}"]},"metadata":{},"sourceType":"module"}